plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

apply from: rootProject.file('extras.gradle')

group = GROUP
version = VERSION

sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
}

jar {
    archiveBaseName.set('hal')

    archiveFileName.set("${archiveBaseName.get()}.${archiveExtension.get()}")
    destinationDirectory.set(project.buildDir)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('sources')

    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('javadoc')

    from javadoc.destinationDir
}

publishing {
    publications {
        mavenHalJava(MavenPublication) {
            artifactId 'hal-java'
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'haljava'
                description = 'HAL Wrapper For Java'
                url = POM_URL

                licenses {
                    license {
                        name = POM_LICENSE_NAME
                        url = POM_LICENSE_URL
                    }
                }

                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_MAIL
                    }
                }

                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_DEV_CONNECTION
                    url = POM_URL
                }
            }
        }
    }

    repositories {
        maven {
            if (isReleaseBuild()) {
                name = 'NexusStaging'
                url = NEXUS_RELEASE_REPOSITORY_URL
            } else {
                name = 'NexusSnapshot'
                url = NEXUS_SNAPSHOT_REPOSITORY_URL
            }

            credentials {
                username getNexusUsername()
                password getNexusPassword()
            }
        }
    }
}

if (shouldSign()) {
    signing {
        sign publishing.publications.mavenHalJava
    }
}
